<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.andypro.games/</id>
    <title>Andy Blog</title>
    <updated>2020-05-02T16:51:22.916Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.andypro.games/"/>
    <link rel="self" href="https://blog.andypro.games/atom.xml"/>
    <subtitle>少即是多</subtitle>
    <logo>https://blog.andypro.games/images/avatar.png</logo>
    <icon>https://blog.andypro.games/favicon.ico</icon>
    <rights>All rights reserved 2020, Andy Blog</rights>
    <entry>
        <title type="html"><![CDATA[像Python一样使用Dart（一）：列表生成 List comprehension]]></title>
        <id>https://blog.andypro.games/post/xiang-python-yi-yang-shi-yong-dartyi-lie-biao-sheng-cheng-list-comprehension/</id>
        <link href="https://blog.andypro.games/post/xiang-python-yi-yang-shi-yong-dartyi-lie-biao-sheng-cheng-list-comprehension/">
        </link>
        <updated>2020-05-02T15:59:24.000Z</updated>
        <content type="html"><![CDATA[<p>Dart语言里，列表生成的一般方式是使用List的generate构造函数：</p>
<pre><code class="language-dart">new List&lt;int&gt;.generate(3, (int index) =&gt; index * index); // [0, 1, 4]
</code></pre>
<p>又是匿名函数又是胖箭头，看起来很不优雅。<br>
既然Dart被称为Python+Java/Kotlin，Python那样的列表生成表达式也是有的：</p>
<pre><code class="language-python">[i*i for i in range(0,3)] #python
</code></pre>
<pre><code class="language-dart">[for (var i = 0; i &lt; 3; i+=1 ) i*i]
</code></pre>
<p>如果需要枚举的对象是LIst和Set，还可以用for-in迭代，看起来更像了：</p>
<pre><code class="language-dart">[for (var i in [0,1,2] ) i*i]
</code></pre>
<p>使用这种写法需要<a href="https://dart.cn/tools/diagnostic-messages#sdk_version_ui_as_code">Dart 2.3.0</a>，在Flutter项目中，需要更改pubspec.yaml：</p>
<pre><code class="language-yaml">environment:
  sdk: &quot;&gt;=2.2.2 &lt;3.0.0&quot;
# 这里是AndroidStudio自动修改的，似乎最低版本大于等于2.2.0即可。
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[著名游戏BUG:Strafe 40 bug]]></title>
        <id>https://blog.andypro.games/post/zhu-ming-you-xi-bugstrafe-40-bug/</id>
        <link href="https://blog.andypro.games/post/zhu-ming-you-xi-bugstrafe-40-bug/">
        </link>
        <updated>2020-04-05T13:54:58.000Z</updated>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>最近学游戏开发时，知道了这个经典的BUG，中文互联网上似乎很少见到关于这个BUG的内容，于是有了这篇文章。</p>
<h2 id="strafe-40-bug">Strafe 40 bug</h2>
<p>Strafe 40 bug是一个来自FPS游戏的鼻祖Doom的著名bug，向前移动同时向任意方向（左右）移动，速度会提升28%，还有同样的Strafe 50 bug。<br>
<img src="https://blog.andypro.games//post-images/1586095312095.gif" alt="" loading="lazy"></p>
<h2 id="原理">原理</h2>
<p>在<a href="https://github.com/osgcc/DOOM/blob/master/linuxdoom-1.10/p_user.c#L148-171">Doom的源代码</a>中，用来控制玩家移动的部分用两个if表达式分别处理向前移动和左右移动的输入，当玩家同时输入时两个语句都会被执行。</p>
<pre><code class="language-c++">void P_MovePlayer (player_t* player)
{
    ticcmd_t*		cmd;
	
    cmd = &amp;player-&gt;cmd;
	
    player-&gt;mo-&gt;angle += (cmd-&gt;angleturn&lt;&lt;16);

    // Do not let the player control movement
    //  if not onground.
    onground = (player-&gt;mo-&gt;z &lt;= player-&gt;mo-&gt;floorz);
	
    if (cmd-&gt;forwardmove &amp;&amp; onground)
	P_Thrust (player, player-&gt;mo-&gt;angle, cmd-&gt;forwardmove*2048);
    
    if (cmd-&gt;sidemove &amp;&amp; onground)
	P_Thrust (player, player-&gt;mo-&gt;angle-ANG90, cmd-&gt;sidemove*2048);

    if ( (cmd-&gt;forwardmove || cmd-&gt;sidemove) 
	 &amp;&amp; player-&gt;mo-&gt;state == &amp;states[S_PLAY] )
    {
	P_SetMobjState (player-&gt;mo, S_PLAY_RUN1);
    }
}	
</code></pre>
<p>此时最终表现出两个方向的速度向量合成，最终的速度为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mrow><mo>(</mo><mn>4</mn><msup><mn>0</mn><mn>2</mn></msup><mo>+</mo><mn>5</mn><msup><mn>0</mn><mn>2</mn></msup><mo>)</mo></mrow></msqrt><mo>=</mo><mn>64</mn></mrow><annotation encoding="application/x-tex">\sqrt{(40^2 + 50^2)} = 64
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.25612499999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.983875em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord">4</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">5</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.9438750000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,
158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067
c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,
175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71
c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,
-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26
s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25612499999999994em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">4</span></span></span></span></span></p>
<figure data-type="image" tabindex="1"><img src="https://blog.andypro.games//post-images/1586096168310.png" alt="" loading="lazy"></figure>
<p><a href="https://wilkie.how/posts/learning-mistakes-from-doom-masters">参考文章</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Coursera慕课学习体验与助学金申请]]></title>
        <id>https://blog.andypro.games/post/coursera-mu-ke-xue-xi-ti-yan-yu-zhu-xue-jin-shen-qing/</id>
        <link href="https://blog.andypro.games/post/coursera-mu-ke-xue-xi-ti-yan-yu-zhu-xue-jin-shen-qing/">
        </link>
        <updated>2020-03-16T12:18:08.000Z</updated>
        <summary type="html"><![CDATA[<p>coursera 学习 助学金申请</p>
]]></summary>
        <content type="html"><![CDATA[<p>coursera 学习 助学金申请</p>
<!-- more -->
<p>学校没有开学，作为大四党，目前呆在家里也没有学校的网课可以学，除了努力找工作，还有就是继续学习技能，上个月看到密歇根大学在微博上发的对中国学生提供每月6人民币的课程优惠价，所以第一次尝试了Coursera，之前除了在中国大学MOOC学习，国外的慕课也只接触过优达学城，但是我的体验并不好，一方面是访问速度，一方面是课程价格，学习一下免费的课程也还可以，比如谷歌的几个，但是已经很久没用了也就不做评价了。<br>
<a href="https://weibo.com/2661683041/Iv2f05EeK">密歇根大学微博</a>，订阅需要注意准备一张Visa、MasterCard卡组织的信用卡或借记卡，Discover、JCB 、American Express卡组织的信用卡，还需要注意的是Coursera的视频是存在亚马逊云的所以国内访问会有问题，网上看到的改hosts并没有什么用，我直接挂代理了，而且系统代理+pac没有用，最好直接用SwitchyOmega插件创建一个全局代理的情景模式。我使用了交行的大学生卡Visa银联双标。扣款账单抵达当天交行会打电话核对是否是本人交易。<br>
<img src="https://tva1.sinaimg.cn/large/00831rSTly1gcw25bipn6j30em0f10wf.jpg" alt="" loading="lazy"><br>
订阅了 密歇根大学 的 Python 3 Programming之后，因为正在学习游戏开发又看上了 科罗拉多大学系统 的 C# Programming for Unity Game Development，但是一个月50美元的费用对我来说还是太贵，于是申请了助学金，几乎所以课程都有助学金，需要注意的是现在申请助学金需要15天的审核期，在这期间不能免费试用，否则会撤回申请。</p>
<p>几乎所有课程都有助学金。<br>
<img src="https://tva1.sinaimg.cn/large/00831rSTly1gcw21mpt41j30oi0e6n3h.jpg" alt="" loading="lazy"></p>
<p>下面是我的申请信，两段内容分别说明个人状况和学习这门课程的原因。不过看到网上有人说内容并不重要，我还是真诚一些把实际情况写了出来。</p>
<p>I am a college student at xxxx University which located in Amoy, China.My major is computer science. I ’m from Gansu Province, China ’s least developed province. （家庭经济状况）Since I don't want to put more burden on my family, I request Coursera for financial aid, and I promise to finish the course. These days are my first contact with Coursera because I saw course discounts offered by the University of Michigan for Chinese students on social media before I tried Coursera.I really like Coursera ,and I think Coursera is a very good platform for people to learn something they need, I hope I can learn something by studying in Coursera. I hope you can agree to my application.</p>
<p>I have always wanted to work in game development. I found this course when I was searching for a new course on the homepage and I am studying Unity game development.But my school doesn't offer game design courses. Graduating a year later, I am anxious about finding a job. There are many game companies in China that use the Unity engine. In this course, I hope to learn how to use Unity for game development and C# programming. I am a complete rookie on Unity and C # now. I hope to gain experience in unity game development through this course. So that I can get a chance to get an internship in a game company.I have encountered difficulties in studying Unity now, and I hope this course will help me. I will learn c# programming and unity,Object-Oriented Programming for Unity Games and Data Structures and Design Patterns for Game Developers.</p>
<p>申请获批后会收到一封邮件，可以开始学习了。<br>
<img src="https://tva1.sinaimg.cn/large/00831rSTly1gcw21b30guj30ha0aj759.jpg" alt="" loading="lazy"></p>
<p>下面是学习体验，密歇根的python课评审是基于密大自己的平台评分的，全部自动，因为会python学的有点散漫，前几周的课程基本上选择直接做课外内容和评分作业，第一个互动作业是用turtle库绘制复杂图像，我画了斐波纳切数列的图片，但是不知道为什么密大的平台提交图片一直是500错误，所以也没体验到什么互动。<br>
<img src="https://tva1.sinaimg.cn/large/00831rSTly1gcw2fhy7vfj30es0cfaa4.jpg" alt="" loading="lazy"></p>
<p>科罗拉多大学的c#游戏开发是用Coursera自己的平台评分的，每周课程都有互评作业，可以看到别人给自己的打分和评语，让我想起在中国大学MOOC上学摄影时的体验了，不过Coursera的体验更好，第二周课程一个外国人还用中文发了评语😂。<br>
<img src="https://tva1.sinaimg.cn/large/00831rSTly1gcw2lu8j7yj309y08p74l.jpg" alt="" loading="lazy"><br>
这次互评作业还发现一个复制别人作业的，因为他复制到我头上了，抄代码也就算了，更过分的是他直接复制了我的运行效果截图，一眼就发现了，为了确认是不是系统缓存问题刷了几次再次刷到那篇作业，确认是抄袭就向Coursera报告了抄袭案例。<br>
这是处理完毕的邮件回复。<br>
<img src="https://tva1.sinaimg.cn/large/00831rSTly1gcw2pgvkwxj30hp0cljsq.jpg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[在阿里云服务器运行Dart Server的踩坑实录]]></title>
        <id>https://blog.andypro.games/post/2020-2-10-Dartserver踩坑/</id>
        <link href="https://blog.andypro.games/post/2020-2-10-Dartserver踩坑/">
        </link>
        <updated>2020-02-20T02:59:13.000Z</updated>
        <summary type="html"><![CDATA[<p>在阿里云服务器运行Dart Server的踩坑实录</p>
]]></summary>
        <content type="html"><![CDATA[<p>在阿里云服务器运行Dart Server的踩坑实录</p>
<!-- more -->
<h2 id="前言">前言</h2>
<p>笔者从2019年9月开始接触Flutter，用Flutter来做Capstone的项目，彼时使用了内置数据存储markdown格式文档，再通过markdown插件展示的纯前台应用，现在将其作为毕业设计的一部分进行改造，首先要解决的是后端使用什么语言的问题，我的备选方案有Python、Golang和Dart。本次就来尝试Dart Server吧。</p>
<p>先说结论，目前不推荐把使用大量插件的WebApp部署在阿里云上，除非你的服务器位于境外且性能不错，使用自带库的简单服务端应用还是可以的。</p>
<h2 id="准备">准备</h2>
<p>阿里云轻量应用服务器，推荐使用Ubuntu和Debian，因为官方的下载只提供了这两种，但是我用的是Wordpress应用镜像，是CentOS系统，不过官方提供教程的两个一样也需要从谷歌的服务器下载sdk，还是推荐通过本地下载好再传输到服务器。</p>
<h2 id="dart-sdk下载与配置环境变量">Dart SDK下载与配置环境变量</h2>
<p>首先下载DartSDK，<a href="http://www.dartdoc.cn/tools/sdk/archive/">下载地址</a></p>
<figure data-type="image" tabindex="1"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbr4uzpffkj30r707zgmv.jpg" alt="" loading="lazy"></figure>
<p>使用命令<code>scp -r dartsdk-linux-x64-release.zip user@yourhost:/tmp</code>将你下载到本地的SDK上传到服务器的tmp路径，如果你和我一样在操作前重置过服务器，报错<code>Host key verification failed.</code>，删除know_host文件即可。</p>
<figure data-type="image" tabindex="2"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbrlonx7lnj30p90epad0.jpg" alt="" loading="lazy"></figure>
<p>shh到服务器，解压SDK到lib目录。</p>
<pre><code class="language-shell">cd /tmp
mv dartsdk-linux-x64-release.zip /usr/lib
cd /usr/lib
unzip dartsdk-linux-x64-release.zip 
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbrmb9he3cj30kh0bi768.jpg" alt="" loading="lazy"></figure>
<p>复制路径，配置环境变量，测试一下没有问题。</p>
<figure data-type="image" tabindex="4"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbrmdgvxzzj30os04i0t7.jpg" alt="" loading="lazy"></figure>
<p>添加到.bashrc方便以后使用。</p>
<figure data-type="image" tabindex="5"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbrmg34m2xj30k30bn75e.jpg" alt="" loading="lazy"></figure>
<h2 id="创建第一个项目">创建第一个项目</h2>
<p>创建我们的第一个http服务端项目。官方代码如下，<strong>需要注意的是阿里云服务端用户需要将InternetAddress.loopbackIPv4更改为你的服务器的内网地址，否则你将无法从外网访问你的http应用</strong>。在服务器控制台的ip地址可以看到它。</p>
<pre><code class="language-dart">import 'dart:io';

Future main() async {
  // #docregion bind
  var server = await HttpServer.bind(
    InternetAddress.loopbackIPv4,//=&gt;172.000.000.000 内网地址
    4040,
  );
  // #enddocregion bind
  print('Listening on localhost:${server.port}');

  // #docregion listen
  await for (HttpRequest request in server) {
    request.response.write('Hello, world!');
    await request.response.close();
  }
  // #enddocregion listen
}
</code></pre>
<p>直接运行即可，在客户端输入外网地址:端口号即可访问。</p>
<figure data-type="image" tabindex="6"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbrmzzv65fj30ge0hc407.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbrnq4nirej30fq0cd0tr.jpg" alt="" loading="lazy"></figure>
<h2 id="创建一个web-app">创建一个web app</h2>
<p>通过下面代码安装webdev和stagehand</p>
<pre><code class="language-shell"> pub global activate webdev
 pub global activate stagehand
</code></pre>
<p>这里会要求你为.pub-cache配置环境变量，用给出的临时更改环境变量的命令即可。</p>
<pre><code class="language-shell">export PATH=&quot;$PATH&quot;:&quot;$HOME/.pub-cache/bin&quot;
</code></pre>
<p>通过以下代码创建官方示例。</p>
<pre><code class="language-shell"> mkdir quickstart
 cd quickstart
 stagehand web-simple
 pub get
</code></pre>
<p>运行，指定hostname到内网地址，将0.0.0.0更改为你的服务器内网地址。</p>
<pre><code class="language-shell">webdev serve --hostname 0.0.0.0
</code></pre>
<p>以上代码运行均需要一定时间，完成，去浏览器看看效果吧。</p>
<figure data-type="image" tabindex="8"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbrnx7as9bj30oi09n762.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbrnz4312xj30f20bljs8.jpg" alt="" loading="lazy"></figure>
<h2 id="后记">后记</h2>
<p>前言中说到的不推荐在阿里云上部署Dart WebApp的原因如下图。创建和pub get实在是太消耗性能了。S</p>
<figure data-type="image" tabindex="10"><img src="https://tva1.sinaimg.cn/large/0082zybply1gbro6hb1dlj30hb0ljab3.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://blog.andypro.games/post/hello-gridea/</id>
        <link href="https://blog.andypro.games/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>